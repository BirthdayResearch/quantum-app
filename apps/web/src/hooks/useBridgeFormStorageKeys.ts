import { useNetworkEnvironmentContext } from "@contexts/NetworkEnvironmentContext";
import {
  STORAGE_TXN_KEY,
  STORAGE_DFC_ADDR_KEY,
  STORAGE_UNCONFIRMED_TXN_HASH_KEY,
  STORAGE_CONFIRMED_TXN_HASH_KEY,
  STORAGE_ALLOCATION_TXN_HASH_KEY,
  STORAGE_REVERTED_TXN_HASH_KEY,
  STORAGE_UNSENT_FUND_TXN_HASH_KEY,
  STORAGE_DFC_ADDR_DETAILS,
  STORAGE_DESTINATION_ADDRESS_KEY,
  STORAGE_TRANSFER_AMOUNT_KEY,
  STORAGE_TRANSFER_DISPLAY_SYMBOL_A_KEY,
  STORAGE_TRANSFER_DISPLAY_SYMBOL_B_KEY,
  QUEUE_STORAGE_UNCONFIRMED_TXN_HASH_KEY,
  QUEUE_STORAGE_CONFIRMED_TXN_HASH_KEY,
  QUEUE_STORAGE_ALLOCATION_TXN_HASH_KEY,
  QUEUE_STORAGE_REVERTED_TXN_HASH_KEY,
  QUEUE_STORAGE_UNSENT_FUND_TXN_HASH_KEY,
  QUEUE_STORAGE_TXN_KEY,
  QUEUE_STORAGE_DFC_ADDR_KEY,
  QUEUE_STORAGE_DFC_ADDR_DETAILS,
  QUEUE_STORAGE_TRANSFER_AMOUNT_KEY,
  QUEUE_STORAGE_TRANSFER_DISPLAY_SYMBOL_A_KEY,
  QUEUE_STORAGE_TRANSFER_DISPLAY_SYMBOL_B_KEY,
  STORAGE_QUEUE_CREATION_KEY,
} from "../constants";

export default function useBridgeFormStorageKeys() {
  const { networkEnv } = useNetworkEnvironmentContext();

  // Local storage txn key grouped by network
  const UNCONFIRMED_TXN_HASH_KEY = `${networkEnv}.${STORAGE_UNCONFIRMED_TXN_HASH_KEY}`;
  const CONFIRMED_TXN_HASH_KEY = `${networkEnv}.${STORAGE_CONFIRMED_TXN_HASH_KEY}`;
  const ALLOCATION_TXN_HASH_KEY = `${networkEnv}.${STORAGE_ALLOCATION_TXN_HASH_KEY}`;
  const REVERTED_TXN_HASH_KEY = `${networkEnv}.${STORAGE_REVERTED_TXN_HASH_KEY}`;
  const UNSENT_FUND_TXN_HASH_KEY = `${networkEnv}.${STORAGE_UNSENT_FUND_TXN_HASH_KEY}`;

  const TXN_KEY = `${networkEnv}.${STORAGE_TXN_KEY}`;
  const DFC_ADDR_KEY = `${networkEnv}.${STORAGE_DFC_ADDR_KEY}`;
  const DFC_ADDR_DETAILS_KEY = `${networkEnv}.${STORAGE_DFC_ADDR_DETAILS}`;
  const TRANSFER_AMOUNT_KEY = `${networkEnv}.${STORAGE_TRANSFER_AMOUNT_KEY}`;
  const TRANSFER_DISPLAY_SYMBOL_A_KEY = `${networkEnv}.${STORAGE_TRANSFER_DISPLAY_SYMBOL_A_KEY}`;
  const TRANSFER_DISPLAY_SYMBOL_B_KEY = `${networkEnv}.${STORAGE_TRANSFER_DISPLAY_SYMBOL_B_KEY}`;
  const DESTINATION_ADDRESS_KEY = `${networkEnv}.${STORAGE_DESTINATION_ADDRESS_KEY}`;

  // Queue
  const UNCONFIRMED_QUEUE_TXN_HASH_KEY = `${networkEnv}.${QUEUE_STORAGE_UNCONFIRMED_TXN_HASH_KEY}`;
  const CONFIRMED_QUEUE_TXN_HASH_KEY = `${networkEnv}.${QUEUE_STORAGE_CONFIRMED_TXN_HASH_KEY}`;
  const QUEUE_ALLOCATION_TXN_HASH_KEY = `${networkEnv}.${QUEUE_STORAGE_ALLOCATION_TXN_HASH_KEY}`;
  const REVERTED_QUEUE_TXN_HASH_KEY = `${networkEnv}.${QUEUE_STORAGE_REVERTED_TXN_HASH_KEY}`;
  const UNSENT_QUEUE_FUND_TXN_HASH_KEY = `${networkEnv}.${QUEUE_STORAGE_UNSENT_FUND_TXN_HASH_KEY}`;

  const QUEUE_TXN_KEY = `${networkEnv}.${QUEUE_STORAGE_TXN_KEY}`;
  const QUEUE_DFC_ADDR_KEY = `${networkEnv}.${QUEUE_STORAGE_DFC_ADDR_KEY}`;
  const QUEUE_DFC_ADDR_DETAILS_KEY = `${networkEnv}.${QUEUE_STORAGE_DFC_ADDR_DETAILS}`;
  const QUEUE_TRANSFER_AMOUNT_KEY = `${networkEnv}.${QUEUE_STORAGE_TRANSFER_AMOUNT_KEY}`;
  const QUEUE_TRANSFER_DISPLAY_SYMBOL_A_KEY = `${networkEnv}.${QUEUE_STORAGE_TRANSFER_DISPLAY_SYMBOL_A_KEY}`;
  const QUEUE_TRANSFER_DISPLAY_SYMBOL_B_KEY = `${networkEnv}.${QUEUE_STORAGE_TRANSFER_DISPLAY_SYMBOL_B_KEY}`;
  const QUEUE_CREATION_KEY = `${networkEnv}.${STORAGE_QUEUE_CREATION_KEY}`;

  return {
    UNCONFIRMED_TXN_HASH_KEY,
    CONFIRMED_TXN_HASH_KEY,
    REVERTED_TXN_HASH_KEY,
    UNSENT_FUND_TXN_HASH_KEY,
    TXN_KEY,
    DFC_ADDR_KEY,
    DFC_ADDR_DETAILS_KEY,
    DESTINATION_ADDRESS_KEY,
    ALLOCATION_TXN_HASH_KEY,
    TRANSFER_AMOUNT_KEY,
    TRANSFER_DISPLAY_SYMBOL_A_KEY,
    TRANSFER_DISPLAY_SYMBOL_B_KEY,

    UNCONFIRMED_QUEUE_TXN_HASH_KEY,
    CONFIRMED_QUEUE_TXN_HASH_KEY,
    REVERTED_QUEUE_TXN_HASH_KEY,
    UNSENT_QUEUE_FUND_TXN_HASH_KEY,
    QUEUE_TXN_KEY,
    QUEUE_DFC_ADDR_KEY,
    QUEUE_DFC_ADDR_DETAILS_KEY,
    QUEUE_TRANSFER_AMOUNT_KEY,
    QUEUE_TRANSFER_DISPLAY_SYMBOL_A_KEY,
    QUEUE_TRANSFER_DISPLAY_SYMBOL_B_KEY,
    QUEUE_ALLOCATION_TXN_HASH_KEY,
    QUEUE_CREATION_KEY,
  };
}
